<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="label1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pAssistMobRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQlSURBVEhLxZR7TJVlHMff91zgcA2Qi5ACcXYGIhcRFniK
        y/BIKDdnGieNSx2IEDgODhFOx5hMGwIJh4MgJwRFaARUm+X0H9NYmFqr7DJdc7iaYX/octay1vr08s5Z
        jHOWl1rf7fnn9zy/7/d5n/f7+wr/OzYf3ky0PRo/mx++Xb5orVoqByu5s/3gKH+rHE2vhkXDnoRPBhDx
        ThBLJ/1RdyplAcNhA/HD8Q8mlDeZh8qu5MnTUaRPRfP4SR1xx8NYdmwJYosok/ru9yXn/EqEPoHkkeR7
        F6qcrMSlX8nGCynkf5KE4aN40j9cTupUJLrJELS7tTKZ+qCKCeoZpIp15xNQWBWkDaU5F3Ltd8X0hgm3
        TjeMF/SUXMqg8PMUnv5iFYnvRRBw4BE0e10w2owYh43oT0XSz4vsu12C9bfn6fy1lJVHw1G1qcg6mLVQ
        SGNX49KrQju+mJdn8ym/vFpeutFgFu9ajGnAhMlukhu1fVq2zmTRcbuYlh8LablpxHAqFsUuBVm9Dsjn
        4NbnSvvPz1Ezk80rP6yn9moOedOJBDQFLGgQe0Qavs/HfGUtTdc30nhtvdyjbFU4fyKhXcAuffKrtzbL
        Tc03N+HRqqF+qH5eU9VYFWK3iEebB2KHQP1sHjXfraP622zWvB+HrkPnRKRF4Ag1dEpvuvenLfKthG0C
        lfb5ns8Zz6FstEyupdpSWT6+lJdm1sj/rPSbDISdgmMBcYfIm9QxTLXkjK203ChEPxGJUCfZsNW5DRXN
        Coovpcuue+YrPYv2eWMZsCw8r2xSUnQujbhDYSi2K/Cu8Sa5OZlSW6lT8jkE7QnCcDqO3I8Tyfk0keBu
        X8p7yxf2hLaGkr4nnUrb/cWAplGDYTqO1dOxZJ6Jwa/Ni6q+KsccFaMVpB5KJaBfcs5+AfO4ed5By6gF
        99fc79YyrZnSk3iSeTaGFGnaV03pUFqcOMlv0A+XARWLRjyJevdRYqRYmIuDO9syyobL8OvzxGuP1926
        i8WF6LeXkHAyAu1YEP7b/B0LFIwV4D7kiu5oCCuk3En7YBmxx0IRugS8rF74d0lB16Qm/XgUxZ+l4bvj
        L3FltZKIiUDU9UoqrBWOBebgfsBdTs6EE+FyFKw9twLjl3p5FX+dgeVqHrtvPUvPH2UYzzxBYEOgTFZr
        q0VRriC+8R/StW6iDtEmyjefC7jssyvYIOVRycU0tl55ioZrBTTf2ET7L0WMSDNjnNIT0hAik9b3zR9I
        p5ibVHWbmrARfzklt1xMlTOpbjaXndc3sEvKHuvvL0jzUkPeiUQ0Zg0NAw33Rv536Hv1qJpVeHe4ESa5
        KsIexGO9QfRgou5yLprtapKak+6f2BHMA2YMew0Et/uQdESLT7UPltcdTOvDoKinCNEsykJ3Sv8uiruL
        /xvih4Mg/Alb9ERXbmMmXwAAAABJRU5ErkJggg==
</value>
  </data>
</root>